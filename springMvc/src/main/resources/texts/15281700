このページでは、Android SDK をインストールして、開発環境を設定する方法について説明します。SDK をまだダウンロードしていない場合は、[ダウンロード] ページからダウンロードしてください。SDK をダウンロードした後に、このページの手順を行ってください。
インストール中に問題が発生した場合は、このページの下部にあるインストールに関する注意事項を参照してください。
アップグレードする場合
SDK の以前のバージョンを使用してアプリケーションを既に開発している場合は、このページの代わりに、SDK のアップグレード をご覧ください。
インストールの準備
インストールを始める前に、開発用マシンがシステム要件を満たしていることを確認してください。
Eclipse 環境に Android Development Tools（ADT）プラグインを組み込んだ開発環境は、Android 向け開発の初心者に最適です。プラグインを利用する場合は、コンピュータに Eclipse の適切なバージョン（3.3 以降）がインストールされていることを確認してください。Eclipse のインストールが必要な場合は、次の場所からダウンロードできます: 
http://www.eclipse.org/downloads/
Eclipse の Java バージョンまたは RCP バージョンをおすすめします。 
SDK のインストール
SDK のダウンロード後、お使いのマシンの適切な場所に .zip アーカイブを展開します。デフォルトでは、SDK ファイルは android_sdk_<platform>_<release> ディレクトリに展開されます。このディレクトリには、ドキュメントのローカル コピー（ブラウザで documentation.html を開くと参照できます）と、tools/、add-ons/、platforms/ などのサブディレクトリが含まれます。platforms/ のサブディレクトリ内には、プラットフォームの各バージョンに固有のコードのサンプルが含まれる samples/ があります。
システム上に展開した SDK ディレクトリの名前とパスをメモしておきましょう。Android プラグインの設定時や、SDK ツールの使用時にこの SDK ディレクトリを参照する必要があります。
SDK のプライマリディレクトリである tools のパスを、システム PATH に追加することをおすすめします。tools/ プライマリディレクトリは、SDK フォルダのルートにあります。tools をパスに追加すると、Android Debug Bridge（adb）やその他のコマンド ライン ツールを、ツールの格納されたディレクトの完全なパスを指定せずに実行できるようになります。 
Linux 上では ~/.bash_profile ファイルまたは ~/.bashrc ファイルを編集します。PATH 環境変数を設定している行を探し、その行に tools/ ディレクトリへの完全なパスを追加します。PATH を設定する行が無い場合は、次の行を追加します:
export PATH=${PATH}:<your_sdk_dir>/tools
Mac 上では .bash_profile のホーム ディレクトリの内から同じファイルを検索し、Linux と同じように設定します。マシン上にまだ .bash_profile が無い場合は、ファイルを作成することができます。 
Windows 上では、[マイ コンピュータ] を右クリックし、[プロパティ] を選択します。[詳細設定] タブで [環境変数] ボタンをクリックし、表示されたダイアログで [システム環境変数] の [Path] をダブルクリックします。その Path に tools/ ディレクトリへの完全なパスを追加します。 
今後 SDK をアップグレードする際は、PATH の設定を更新することを忘れないでください。別のディレクトリに SDK を展開する場合は、その新しい場所を PATH に設定する必要があります。
Eclipse IDE を開発環境として使用する場合、Android Development Tools プラグインをインストールして Eclipse を設定する方法について、次のセクションの情報を参照してください。Eclipse を使用しない場合は、別の IDE を使用して Android アプリケーションを開発してから、SDK に含まれているツールを使用してコンパイル、デバッグ、配布を行うことができます（この場合は、次のステップに進んでください）。
Eclipse 用 ADT プラグインのインストール
Android では、Android Development Tools（ADT）という Eclipse IDE 用のカスタム プラグインを提供しています。このプラグインは、Android アプリケーションの構築を可能にするために設計された、強力な統合環境です。プラグインによって Eclipse の機能が拡張され、新しい Android プロジェクトの設定、アプリケーションの UI の作成、Android Framework API に基づくコンポーネントの追加、Android SDK ツールを使用したアプリケーションのデバッグが可能になります。さらに、アプリケーションを配布するための署名済み（または未署名）の APK のエクスポートも簡単にできるようになります。
一般的な Android 開発において、ADT を組み込んだ Eclipse の使用は強く推奨されており、Android 初心者に最も効率的な開発環境を提供します。（Eclipse 以外の IDE で作業する場合は、Eclipse や ADT をインストールする必要はありません。代わりに、SDK ツールを直接使用してアプリケーションを構築し、デバッグを行います）。
インストールの準備で説明した手順に従って Eclipse をインストールした後は、次の手順に従って操作して ADT プラグインをダウンロードし、それぞれの Eclipse 環境にインストールします。 
Eclipse 3.3（Europa）Eclipse 3.4（Ganymede）
Eclipse を起動し、[ヘルプ] > [ソフトウェアの更新] > [検索とインストール] を選択します。 
表示されるダイアログで [インストールする新規フィーチャーを検索] を選択して [次へ] をクリックします。 
[新規リモートサイト] をクリックします。 
表示されるダイアログ ボックスで、リモート サイトの名前（例: 「Android Plugin」）を入力し、URL を入力します:
https://dl-ssl.google.com/android/eclipse/
プラグインが入手できない場合は、URL の「https」の代わりに「http」を使用してみてください（セキュリティ上の理由からは、https をおすすめします）。
[OK] をクリックします。 
検索リストに新しいサイトが追加されており、チェックボックスがオンの状態で表示されるはずです。[終了] をクリックします。 
次の [検索結果] ダイアログボックスで、「Android Plugin」のチェックボックスをオンにします。これにより、そこに含まれているツール「Android DDMS」と「Android Development Tools」も自動的にオンになります。[次へ] をクリックします。
使用許諾契約を読み、同意して、[次へ] をクリックします。 
次のインストール ウィンドウで [終了] をクリックします。 
ADT プラグインはデジタル署名されていません。[すべてインストール] をクリックしてインストールを許可します。 
Eclipse を再起動します。 
Eclipse を起動し、[ヘルプ] > [ソフトウェアの更新] を選択します。
表示されるダイアログで [使用可能なソフトウェア] タブをクリックします。 
[サイトの追加] をクリックします。 
次の場所を入力します:
https://dl-ssl.google.com/android/eclipse/
プラグインが入手できない場合は、場所の URL の「https」の代わりに「http」を使用してみてください（セキュリティ上の理由からは、https をおすすめします）。 
[OK] をクリックします。
[使用可能なソフトウェア] のタブに戻ると、上記の URL によるプラグインとその中に含まれる「Developer Tools」が表示されているはずです。「Developer Tools」の横のチェックボックスをオンにし、[インストール] をクリックします。
次のインストール ウィンドウで、「Android DDMS」と「Android Development Tools」の両方のチェックボックスがオンになっていることを確認します。[次へ] をクリックします。 
使用許諾契約を読み、同意して、[終了] をクリックします。
Eclipse を再起動します。 
次に、Eclipse の設定を変更して、Android SDK ディレクトリを指すように変更します:
[ウィンドウ] > [設定] を選択して、[設定] パネルを開きます（Mac 上では [Eclipse] > [設定]）。
左側のパネルで [Android] を選択します。 
メイン パネルの [SDK Location] で [参照] をクリックし、ダウンロードした SDK ディレクトリを探します。 
[適用] をクリックして、[OK] をクリックします。
これで完了です。問題なく完了した場合は、Android アプリケーション開発を始める準備が整っています。開発を始めるヒントについては、次のステップのセクションをご覧ください。 
ADT のインストールでのトラブルシューティング
上記の手順で、ADT プラグインのダウンロードに問題が生じた場合のヒントは次のとおりです: 
Eclipse から ADT プラグインを含むリモート更新サイトが見つからない場合は、リモート サイトとして指定した URL の https を http に変更してみます。つまり、次のリモート サイトの URL を設定します:
http://dl-ssl.google.com/android/eclipse/
ファイアウォール（社内のファイアウォールなど）の内部にいる場合、Eclipse でプロキシ情報が正しく設定されていることを確認してください。Eclipse 3.3/3.4 でプロキシ情報を設定するには、Eclipse のメイン メニューから [ウィンドウ]（Mac 上では [Eclipse]）> [環境設定] > [一般] > [ネットワーク接続] を選択します。
それでも Eclipse を使用して ADT プラグインをリモート更新サイトとしてダウンロードできない場合は、ADT zip ファイルをローカル マシン上にダウンロードして、手動でインストールすることができます:
ADT zip ファイルをダウンロードします（展開はしないでください）。
デフォルトのインストール手順（上記）のステップ 1 と 2 のとおりに操作します。
Eclipse 3.3 では [新規アーカイブ・サイト] をクリックします。 Eclipse 3.4 では [サイトの追加] をクリックして、[アーカイブ] をクリックします。
ダウンロードした zip ファイルを参照して選択してください。
上記のステップ 5 から残りの手順に従って操作します。
zip ファイルからインストールしたプラグインを後でアップデートする場合は、デフォルトのアップデート手順の代わりに、もう一度この手順どおりに操作する必要があります。
その他のインストール エラー
オプションの Eclipse コンポーネント（WST など）を必要とする ADT の機能があります。ADT のインストール時にエラーが発生した場合、お使いの Eclipse インストール環境にこうしたコンポーネントが含まれていない可能性があります。必要なコンポーネントを Eclipse インストール環境に簡単に追加する方法について詳しくは、トラブルシューティング トピック ADT インストールエラー: "requires plug-in org.eclipse.wst.sse.ui" をご覧ください。
Linux ユーザーの場合
Eclipse 用 ADT プラグインのインストール時に、次のエラーが発生する場合があります。 
An error occurred during provisioning.
Cannot connect to keystore.
JKS
この場合、お使いの開発用マシンに適切な Java VM が搭載されていません。Sun Java 6 をインストールするとこの問題が解決し、ADT プラグインを再インストールすることができます。
次のステップ
インストールを完了すると、アプリケーションの開発を始める準備が整います。開発を始める方法をいくつか紹介します: 
Android の詳細の学習
デベロッパー ガイドと、ガイドに説明されている情報の種類を参照します。
Android をプラットフォームとして紹介している Android とはを読みます。
アプリケーションの基礎を参照して、Android フレームワークとそこでのアプリケーションの実行方法について学びます。
[リファレンス] タブの Android Framework API の仕様を参照します。
SDK の探索
利用可能な開発ツールの概要を把握します。
Eclipse/ADT または別の IDE での開発方法を参照します。
サンプル コードの参照
Hello World アプリケーションを構築します（特に Eclipse ユーザーにおすすめです）。
Notepad チュートリアルに沿って Android アプリケーションを完全に構築します。 
<sdk>/platforms/<platfrom>/samples に収められている他のサンプル アプリケーションのいずれかを新しいプロジェクトとして作成し、自分の開発環境でコンパイルし、実行します。
Android デベロッパー グループへのアクセス
[コミュニティ] タブで、Android デベロッパー グループの一覧を参照します。特に Android Developers グループは、Android デベロッパー コミュニティがどういうものかを知るのに参考になります。
インストールに関する注意事項
Ubuntu Linux に関する注意事項
開発マシン上で Java をインストールして設定する方法については、次のリソースが参考になります: 
https://help.ubuntu.com/community/Java 
https://help.ubuntu.com/community/JavaInstallation
Android SDK と ADT プラグインをインストールする前に、Java と Eclipse をインストールする手順は次のとおりです。
開発マシン上で 64 ビット版を実行している場合は、apt-get: を使用して ia32-libs パッケージをインストールする必要があります:
apt-get install ia32-libs
次に Java をインストールします: apt-get install sun-java6-bin
Ubuntu パッケージ マネージャでは現在、Eclipse 3.3 バージョンのダウンロードを提供していないので、eclipse.org（ http://www.eclipse.org/downloads/ ）から Eclipse をダウンロードすることをおすすめします。Eclipse の Java バージョンまたは RCP バージョンをおすすめします。
上記のセクションの手順どおりに SDK と ADT プラグインをインストールします。 
その他の Linux に関する注意事項
開発用コンピュータに JDK が既にインストールされている場合は、システム要件に記載されているバージョン要件を満たしていることを確認してください。特に、ディストリビューションによっては JDK 1.4 または Gnu Compiler for Java が組み込まれている場合があります。これらは Android の開発ではサポートされていないので、ご注意ください。