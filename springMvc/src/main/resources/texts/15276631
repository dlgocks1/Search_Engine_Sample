The ITCAMfWAS z/OS Data Collector(DC) consumes CPU cycles in the background regardless of the level of WebSphere request activity. This no-load or load-independent CPU utilization is higher than some customers would prefer.
Load-independent CPU utilization can be reduced by a combination of 1) adjusting JVM defined Garbage Collection intervals, 2) being less aggressive in the frequency of some performance data collection, and 3) choosing not to gather some types of performance data. First, we list a summary of what can be changed, followed by detailed instructions. S U M M A R Y 1. JVM RMI Garbage Collection interval By default the RMI GC will execute every minute. In our labs, the garbage collector thread was consuming up to 30% of the total cpu consumed by the DC region, running with no request or application load. When we changed the interval to one hour, GC CPU utilization was reduced substantially. 2. WebSphere SMF recording interval. When ITCAM 6.1 setup executes, if the SMF option ( “y” ) is chosen, 
ITCAM adds WebSphere-defined SMF recording properties to the control region, with a recording interval of 2 minutes. We noticed improvements by disabling the recording, or by increasing the interval to 6 minutes, or higher. 3. TEMAGCCollector.gclog.path JVM custom property. A servant JVM custom property may reference a gc.log that was not present in our ITCAM 6.1 test system, because we did not have TEMA configured. A log record was being generated every 15 seconds creating a larger trace-dc-Ext.log file. We in effect disabled this processing by changing the property name to xxxxTEMAGCCollector.gclog.path. If TEMA is configured to collect GC data, you may have both a TEMAGCCollector.gclog.path and Generic JVM arguments -verbose:gc -Xverbosegclog __”path name”__ In this case, to stop GC log scanning rename the path of TEMAGCCollector.gclog.path so that it points to a non existing file. 4. Changes to Data Collector properties The major ones here: a. Disable all PMI data collection in the DC. If you do not need PMI supplied metrics, you may wish to disable their collection by ITCAM. internal.pspmiinfo.disable=yes b. Change publishing server interval from .2 secs to 2 seconds. 
In lightly or no-load regions, this can be effective. internal.probe.publishing.frequency=2000 networkagent.publish.frequency=2000 5. Changes on the Managing Server Visualization Engine Web application Increase the interval in which the Managing Server polls each DC for System Resources. 6. Disable the TEMA interface If you do not need or use TEMA, disable it in ITCAM. 7. Disable Toolkit Request Aggregator If TEMA is disabled, you should disable the toolkit Request Aggregator. 8. In the CYN1 subsystem, turn off writing of SMF records. You may wish to off writing of application generated SMF records ( type 120, subtypes 3, 6, and 8 ) to the SMF data sets. 9. Disable the LogCmd feature. You should disable this feature, not used by ITCAM. If the feature is enabled, as it is by default, a JFLT thread is created that opens a socket used for processing remote commands for setting logging and debug levels. ITCAM supplies it’s own feature in CommandAgent. I N S T R U C T I O N S 1. JVM RMI Garbage Collection intervals. Change the JVM RMI Garbage Collection interval from the JVM default of 1 minute to 1 hour. Add two additional parameters to the servant region’s generic JVM arguments. Append the parameter strings to the end of the current entry. A dash(-) is required in front of each. The two are separated by a space. -Dsun.rmi.dgc.server.gcInterval=3600000 -Dsun.rmi.dgc.client.gcInterval=3600000 In WebSphere 6: Servers > Application Servers > “Server-name” > Server Infrastructure / Java and Process management / Process Definition > Servant > Additional Properties / Java Virtual machine . 
Under General Properties, in Generic JVM Arguments, append the above string to the contents of JVM arguments text box as described above. Apply; Save; synchronize nodes as appropriate. 2. WebSphere’s SMF recording interval. Increase the SMF interval that is used in recording SMF data by WebSphere, above the ITCAM installation default of 2 minutes, if you have selected “Collect SMF Data =yes” chosen during the ITCAM setup run. The related properties are stored and must be changed in the Control region. Change from 2 minutes to 6 minutes, or disable it. 
To increase the SMF recording interval, defined in the Control region 1. Log in to the WebSphere Application Server administrative console. 2. Navigate as follows: WebSphere Application Server 6 1. Select Server > Application Servers and select the <ServerName>. 2. In the Configuration tab, navigate to Server Infrastructure: Java and Process Management > Process Definition > Control[ for Process Type] > Additional Properties: Custom Properties. You may choose to turn off SMF recording by deleting the properties, or set the “enabled” properties to false, or increase the recording interval . To change the interval, edit “server_SMF_interval_length” Change value to “360” for 6 minutes Apply, and Save. 3. TEMAGCCollector.gclog.path In our lab test, ITCAM was looking to scan our gc.log file every 15 seconds, and was writing a log file record each time. We recommend renaming this property for your tests. If you do not have TEMA gen’d for GC reporting: In Admin Console, WAS 6, Application servers > itcam61_gene > Process Definition > Servant > Java Virtual Machine > Custom Properties Rename the property name to “xxxx TEMAGCCollector.gclog.path” Apply, Save; synchronize nodes as appropriate. If you do [ see the initial “summary” section ], simply Rename the value of this property to a path/file that does not exist. 4. Changes to Data Collector properties Data Collector properties are stored in the directory: <DC_HOME_RUNTIME>/<app_server_version>.<node_name>.<appserver_name> DC properties file is named: <app_server_version>.<node_name>.<appserver_name>.datacollector.properties # 1 -- PMI data gathering # PS based PMI info is turned off if this is set to YES; vals (YES | NO); 
# default NO # To turn off PMI info gathering in DC: internal.pspmiinfo.disable=yes # 2 – Thread priorities # Reduce Thread Event agent priority # The priority of the event agent threads in NORMAL mode ea.thread.priority=5 # The priority of the event agent threads in TURBO mode. This should be same or higher than Normal mode ea.turbo.priority=5 # Network agent thread priority # The priority of the Network Agent threads in NORMAL mode na.thread.priority=5 # The priority of the Network agent threads in TURBO mode na.turbo.priority=5 # 3 -- Internal publishing frequency # internal.probe.publishing.frequency=200 # set to 2 seconds: internal.probe.publishing.frequency=2000 # The time NA sleeps in normal mode # Publish Frequency of the NetworkAgent thread [millisecs; default 500 ms] # set to 2 seconds: networkagent.publish.frequency=2000 5. Changes to Managing Server Visualization Engine Increase the interval in which the Managing Server polls each DC for System Resources: Administration -> Managing Server System Properties Change System Resource Polling Frequency” to “120” for 2 
minutes, or “180” for 3 minutes, etc. 6. Disable the TEMA interface The most reliable way to disable the TEMA interface is to unconfigure, using unconfig.sh, then rerun setupwas.sh, where you would not choose to include the TEMA interface. The manual instructions below have been constructed from manual instructions on how to add the TEMA interface after setup has already been run. In summary, to disable TEMA involves: 1. kwjdc properties 2. Generic JVM arguments for verbose gc processing 3. If JDK 1.3, remove an environmental variable. Perform the following procedure to disable TEMA: 1. In the DC_home/runtime/app_server_version.node_name.server_name/app_server_version.node_name.server_name.kwjdc.properties file, make the following modifications: a. Comment the following line removing the port number to be used by the TEMA: com.ibm.tivoli.kwj.agentport= b. Comment the following line com.ibm.tivoli.kwj.agenthostname= c. Comment the following line related to GC log path: TEMAGCCollector.gclog.path= 2. Change verbose logging entries added to Generic JVM arguments for TEMA. Instructions are listed above on how to edit these Generic JVM arguments. In the Generic JVM arguments field, remove one of the following strings of text depending on what is there. For IBM JDK 1.4 and 1.5: remove these: -verbosegc -Xverbosegclog:gc_logfile_path For IBM 1.3 JDK: Remove: -verbosegc 3. In addition if you have IBM JDK 1.3, one more change is needed to remove an environmental variable. You should delete : IBM_JVM_ST_VERBOSEGC_LOG To do that: In the WebSphere Admin Server, 1. Click Server > Application Servers and select the server_name. 2. In the Configuration tab, navigate to Server Infrastructure > Java and Process Management > Process Definition > Servant > Additional Properties: Environment Entries. Delete or rename the following environment variable: IBM_JVM_ST_VERBOSEGC_LOG=GC_logfile_path 7. Disable Toolkit Request Aggregator If TEMA is disabled, you should disable the toolkit Request Aggregator. a. In your DC runtime configuration directory of the DC region, rename the runtime property file: <app_server_version>.<node>.<server_name>.toolkit.properties b. In the same directory, in the directory named “custom”,edit the file toolkit_custom.properties: add these lines # # Disable request aggregator # com.ibm.tivoli.itcam.toolkit.ra.enablerequestaggregator=false # 8. In the CYN1 subsystem, turn off writing of SMF records. You may wish to turn off writing of application generated SMF records ( type 120, subtypes 3, 6, and 8 ) to the SMF data sets, during time frames when this data may not be needed. Issue command to the CYN1 subsystem: F [ xxxx | yyyy ],SMFWRITE OFF xxxx = name of proc [ ex. CYN1PROC ] – or if an id was 
assigned: 
yyyy = id assigned to the CYN1 started task To verify, issue: F [ xxxx | yyyy ], SMFWRITE SHOW Reference: Appendix D, ITCAM z/OS Data Collector Configuration and Customization Guide 9. Disable LogCmd feature. LogCmd is a feature of one of the logging tools used by ITCAM. ITCAM does not use the feature, so it can be disabled. Disable by modifying your server runtime cynlogging.properties file. In your runtime logging properties file, cynlogging.properties: change: from this: 
# control whether logcmd enabled jlog.noLogCmd=false to this: 
# control whether logcmd enabled jlog.noLogCmd=true