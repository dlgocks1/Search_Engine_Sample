演算子にご注意！たとえば、クラスMatrixのインスタンスに対して、次のようによくある演算をします。Matrix ma; ma = mb + mc; /* ↑ mb, mcは、初期化済みのMatrixインスタンス。*/これもまた、非効率です。どこが非効率なのでしょうか？
答え１まず第一に、maの初期化です。「Matrix ma;」が実行されると、maのデフォルトコンストラクタが呼ばれます。つまり、何らかの初期化がコンストラクタ内部で行われます。この「何らかの初期化」が非常に曲者です。Matrixくらいであれば想像もつきますが、通常「何らかの初期化」は想像できないものです。つまりデフォルトコンストラクタの初期化によって、莫大なメモリ領域を暗黙的に確保されていても、ものすごい計算量のコードが動いていても、次行の「ma = mb + mc」で全部パーです、全部全部、無駄になります。
答え２次に「ma = mb + mc」も、効率が悪いです。この式は、まず「mb + mc」を計算し、それを一時オブジェクトに代入し、その一時オブジェクトをmaに代入するからです。コードとしては以下のような感じです。Matrix ma; Matrix temp = mb +mc; ma = temp;（コードは、あくまでサンプル。実際に一時オブジェクトが作られるのは、mb.operator+()の中）
効率をもとめるコードサンプル以下に、上記の二点を改良したコードを示します。Matrix ma(mb); ma += mc;こうすれば、maの初期化がmbを使って行われ、足し算（operator+）による一時オブジェクトもありません。
以上