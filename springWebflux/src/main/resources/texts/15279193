PHPでMySQL(データべース)に接続してデータを表示し、ページング処理を加えます。また、Smartyを使って、データとテンプレートを結合します。 前回のエントリー Smarty(基本編)＆ PEAR Pager から少し応用したものです。それでは、コードを以下に記します。 
<?php //必要なライブラリのインクルード require_once("Pager/Pager.php"); require_once("Smarty.class.php"); // MySQLへの接続設定 // サーバー･データベース・ユーザー･パスワード $server = "localhost"; $dbname = "stocks"; $user = "root"; $pass = "*****"; // 変換する文字コードを定義しておきます $enc_dis = "SHIFT_JIS"; $enc_db = "UTF-8"; // MySQLと接続する $conn = mysql_connect($server, $user, $pass) or die("DB接続エラー"); mysql_select_db($dbname) or die("DB接続エラー"); // テーブルの行数を数えます $sql = "SELECT COUNT(*) AS cnt FROM str;"; $res = mysql_query($sql, $conn) or die("DATA抽出エラー"); //レコード開始位置指定 $start = 0; //最大レコード数を指定 $limit = 10; // データを取り出すSQLを実行します。 $sql = "SELECT id, cod, nam, sect FROM str ORDER BY id LIMIT $start, $limit;"; $res = mysql_query($sql, $conn) or die("DATA抽出エラー"); // データを配列に入れます while ($row = mysql_fetch_array($res, MYSQL_ASSOC)) { $res_data[] = array( "id" => $row["id"], "cod" => $row["cod"], "nam" => mb_convert_encoding($row["nam"], $enc_dis, $enc_db), "sect" => mb_convert_encoding($row["sect"], $enc_dis, $enc_db) ); } // MySQLの接続を解除する mysql_close($conn); //Pagerのパラメータを指定 $params = array( "itemData" => $res_data, "totalItems" => $limit, "perPage" => 3, "delta" =>5, "mode" =>"Jumping" ); //パラメータの連想配列を受け取る $pager =& Pager::factory($params); // ページデータの割り当て処理 foreach($pager->getPageData() as $item){ $res_data_page[] = $item; } //戻る/次/最初/最後のリンクとページリンクを返す $link = $pager -> getLinks(); //現在のページ番号を返す $currentPageID = $pager -> getCurrentPageID(); //Smartyクラスのインスタンス生成) $smarty = new Smarty; //各ディレクトリを指定 $smarty->template_dir = './templates/'; $smarty->compile_dir = './templates_c/'; $smarty->config_dir = './configs/'; $smarty->cache_dir = './cache/'; //テンプレートへ変数を割り当て $smarty->assign('data', $res_data_page); $smarty->assign('pageNavi', $link['all']); $smarty->assign('currentPage', $currentPageID); //テンプレートに表示 $smarty->display('stocks_pager.tpl'); ?>
<html> <head> <title>Pager Stocks</title> </head> <body> <h4>Pager Stocks</h4> <table border="1"> <tr> <th>id</th> <th>コード</th> <th>銘柄</th> <th>業種</th> </tr> {foreach from=$data item="data"} <tr> <td>{$data.id}</td><td>{$data.cod}</td><td>{$data.nam} </td><td>{$data.sect}</td> </tr> {/foreach} </table> <p>{$pageNavi}</p> <p>{$currentPage}ページを表示</p> </body> </html>