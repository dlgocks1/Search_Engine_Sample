シリーズ「UML等各種ダイアグラムのエラーチェック体系化」です。 
現在「いろんなダイアグラムをＲＤＢにいれよう！」化計画、 
をやっていて、 
前回までで、ダイアグラムをRDBにいれる入れ方をかきました。 
今回から、具体的なダイアグラムをいれていきます。 
まずは、クラス図です。 
なお、ここで書いたとおり、いままでのまとめは 
こちら 
システム開発における「最小単位」とその連結法 
http://www.geocities.jp/xmldtp/index_system.htm 
（更新しました！！１５回までの分が入ってます） 
■クラス図 
まず、クラス図とは。をまとめておきます。 
クラス図は、ここにあるように、クラス（四角形であらわされる）と関係（線）であらわされます。 
クラスは、クラス名、属性（プロパティ。今回、このRDBに入れるときの用語で、属性って言う言葉を使っているので、以下、プロパティと書きます）、メソッドから成り立ちます。この間を線をひきます。 
関係には、 
・リンク 
・関連 
・集約 
・コンポジション 
・汎化・特化 
・実現 
などがあります。 
■RDBに入れる 
まず、ノードとアーク（リレーション）にわけます。 
ノード：クラス 
アーク：関係 
そうすると、ノードが属性を項目としたテーブルを持つことになりますが、ここで属性は、 
・クラス名 
・プロパティ 
・メソッド 
です。このうち、プロパティとメソッドは複数の値を持ちますので、プロパティテーブルとメソッドテーブルにわかれますが、メソッドの引数は、複数の値をとりますので、さらに、引数テーブルになります。 
また、関係には、さまざまな種類がありますので、関係テーブルには、その種類をもつことになります。 
そして、元、先カーディナリティ、場合によっては、関連の名前とか、関連の端に名前をつけることもあるかもしれない。 
まとめると、こんなかんじ。 
クラステーブル（クラスID,クラス名） 
プロパティテーブル（クラスID,プロパティID,プロパティ名、可視性（スコープ）、 
型、初期値、その他の特性） 
メソッドテーブル（クラスID,メソッドID,メソッド名、可視性（スコープ）、 
型、戻り値） 
引数テーブル（クラスID,メソッドID,引数ID,引数名、可視性（スコープ）、型） 
関連テーブル（関連ID,元クラスID,先クラスID,種別、 
元カーディナリティ、先カーディナリティ、 
（関連名、元関連名、先関連名、グループID）） 
＊関連テーブルの種別は、リンク、汎化・特化、集約などを、番号化して設定 
カーディナリティは、１、N、などを設定（元、先両方ありえる） 
関連名が（）になっているのは、場合によってはいる？ってこと。 
グループIDについては、別の機会に詳しく説明します。 
必要ないかも・・・ 
こんなかんじ。 
次回からも、いろんなダイアグラムを紹介して、それをRDBに入れることなどについて述べていきます。