16:21Objectオブジェクト不変 : 生成時にすべての状態が決まる、生産物。可変 : 主に、不変なデータを保持する。保持する人。関数オブジェクト : オブジェクトを食って何か処理を施す。こういう分類にすると、よく分かる気がする。関数オブジェクトの基本形はfilter, mapperで、入力のオブジェクトを分類、変化させることで役目を終える。通常、使い捨て。典型的な使い方としては
f = Function()
f.setTheWayToFunc(theWayToFunc) # デフォルト値の変更
returnedObject = f.process(object)
裏マーチンはClean Codeの中で、「オブジェクトにやらせる処理を関数にやらせると大変なことになるし、その逆も然りだ」ということを言っている。これはどういうことかというと、関数で書くべき処理は確かに存在するし、それをオブジェクトにやらせると大変なことになるということだ。一般的に、凝集度がおかしくなる。つまり、オブジェクトでないならば、完全に関数チックに設計した方がいい。確かにマーチンがいうように、すべてを生成時に決定させるという方法は悪くはならない。それがリリースの形だとは限らないからだ。だが、おれにはそれはいかにも無駄に見える。関数のくせに何もかも、対象までコンストラクタに含んでしまうというのは、何だか気に食わない。