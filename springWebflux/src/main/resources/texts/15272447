日記  新はてブいまだに慣れない。    Poderosa を使って Cygwin を起動し、git で管理しているサイトのファイルを更新する  これまでのあらすじ：（前略）cygwinを使ってみた〜インストール編〜  無事に cygwin のインストールが完了した。 更新するにはもうひとつ、Poderosa という専用のターミナルが必要らしい。  Poderosa は、タブ式 GUI・SSH2 をサポートしているオープンソースの  Windows 用高機能ターミナルエミュレータです。 Poderosaとは  ダウンロードはここから。 Poderosa ダウンロード  前回インストールした Cygwin は、Poderosa から起動する。 なので、Poderosa のショートカットを作っておくと便利だね(･∀･)  Poderosa での Cygwin の起動〜終了、SSH でのアクセス方法については 下記サイトがめちゃんこ分かりやすいのでご覧あれ┏○ PoderosaおよびCygwinの利用方法について   準備が整ったらいよいよ本番！　実際の更新までのフロー(｡･д´･｡)ﾉ ・・・の前に、基本的なコマンドだけ整理しておく。  cd hogehoge　// hogehogeに移動  pwd　// 現在の場所を確認  ls　// ファイルの中身を確認  ls -l　// ファイルの中身を詳しく確認  v+Tab 　// v で始まる名前を補完してくれる。複数ある場合は2文字目まで打って絞り込み  この辺りを把握しておくとかなりラク。無駄に費やす時間をダイエットできる（※効果には個人差があります＞＜） とはいえ、実際に使うコマンドは、コマンドプロンプトの時と全く一緒だったりする。よかた(´∀｀)  ココと同じことをやるよ！：Railsを知らない私がgitを使ってみた   まずは前回同様、git と入力。すると、やっぱりズラーっとなんか出てくる。  さて、私はどこにいるのかなぁーと。   admin@***** $ pwd /home/admin   OH、ほーむあどみんか。じゃあ移動。   admin@***** $ cd hogehoge   一応、場所を再確認。（ pwd したいだけ）  admin@***** $ pwd /home/admin/hogehoge   うし！ばっちり♪ 次は、git status で変更したファイルを確認。   admin@***** $ git status # On branch master # Changed but not updated: # (use "git add ..." to update what will be committed) # # modified: ファイル名 # no changes added to commit (use "git add" and/or "git commit -a")   そうそう、それそれ。それを今度はローカルでコミット。   admin@***** $ git commit -a -m lovecall（適当な名前）  Created commit *****: lovecall 1 files changed, 2 insertions(+), 2 deletions(-)   でけた(ﾟ∀ﾟ) これを git push すればいいんだけど、例によって失敗したので git pull。   admin@***** $ git pull URL................  remote: Counting objects: 9, done. remote: Compressing objects: 100% (5/5), done. remote: Total 5 (delta 3), reused 0 (delta 0) Unpacking objects: 100% (5/5), done. From URL................ * branch master -> FETCH_HEAD Merge made by recursive. *****.** | 6 +++++- 1 files changed, 5 insertions(+), 1 deletions(-)  �瑤Ľ¤叩�1 files changed くん！会いたかったよ！どうやら大丈夫そうだ。 そだ。一応、しくじったときのメッセージもメモしとこう。  admin@***** $ git push To git+URL............... ! [rejected] master -> master (non-fast forward) error: failed to push some refs to 'git+URL..............  rejected(´･ω･‘)   あらためて、git push にトライ！   admin@***** $ git push Counting objects: 18, done. Compressing objects: 100% (10/10), done. Writing objects: 100% (10/10), 990 bytes, done. Total 10 (delta 8), reused 0 (delta 0) To git+ URL.................. 0****..0**** master -> master  いけたっぽいヾ(＊´∀｀＊)ﾉｷｬｯｷｬ   ここまで出来たら次は SSH 接続。 上で紹介したサイトのスクリーンショットを参考に、画面を切り替えて作業する。  SSH の方は cd でディレクトリを移動して git pull するだけ。 ブラウザで F5 押したらちゃんと変更されてるよ！やたーーー！！    お疲れちゃんでしたっ。   
日記  会社でソーシャルメディア連続リリース中なので、こっちも連続更新するのだ(｀･ω･´)  第1弾 ： ソーシャルメディアへリンクするブログパーツ「ピンポン46（ヨロ）」リリース 第2弾 ： ドメインの価値算出を「群衆の知恵」モデルで行う「ドメイン売買.com」をリリース 第3弾 ： カミングスーんヾ(ﾟ∀ﾟ*)ﾉ     Cygwinをインストールする  これまでのあらすじ：Railsを知らない私がgitを使ってみた  msysgit での更新がうまくいかないので弊社エンジニアのcesare殿に相談したところ、 Cygwinをインストールしちゃった方がいいかも、とのこと。 やむを得ぬので重い腰を上げてインストール。の前に、もう一度確認。Cygwin とは何ぞ？  Cygwin (シグウィン) は、Microsoft Windowsオペレーティングシステム上で動作する UNIXライクな環境の一つである。フリーソフトウェアである。 Cygwin - Wikipedia  ウィンドウズでユニックスできるソフトらしい。 インストールはCygwin Information and Installationの「Install or Update now!」をクリック。     基本デフォルトのままGOしちゃってOKだが、2箇所ほど注意すべき箇所が。 1つはここ。     このサイトの中から、ほげほげ.jp のものを選択。     もう1つはこの画面。     ここで Devel の中にある git: Fast Version〜 と     Net の中にある open ssh〜 を選択。     あとはしばし待たれよ。さすれば与えられん！  
日記  ブログ開設から1年が経った＼(^o^)／ﾆｮｰ!! 0日目　ギークはじめました  今日はリアルに誕生日なので、大好きなコマンドプロンプトと愛を語り合っているよ。 「俺んとこ来ないか」と言ってる気がする。なんて硬派・・・超かっこいい・・・ コマンドプロンプトとの結婚を法的に認めて下さい。（元ネタ）    Railsで作成しgitで管理しているサイトのファイルを更新する  Rails初心者どころか、コードを見たこともないわけだが(；・∀・) 仕事で必要に迫られたので、git をインストールして使っているよ！ 目的は、私のマシンで変更したファイルをサーバーにアップロードして、サイト上に反映させること。 ね、FTPじゃダメなの？ねぇ、ねぇ・・・どうしてもダメなのね・・・(つд・)ｶﾞﾋﾞｰﾝ  以下、git インストールからサイト上に更新を反映させるまでの手順と参考にしたサイト。 初心者にも分かりやすい git 関連リンクは末尾にまとめて記載。   Windowsな私はここからインストール。 msysgit - Google Code 参考：WindowsでGitをはじめるなら「msysGit」 - MOONGIFT  本当はCygwinという、Win上で動作するUNIXライクな環境が必要らしいが・・・ 簡単に環境が整えられてマジ助かった＞＜ 参考：Windowsユーザーへ贈るUnixへの架け橋 Cygwinを使いこなそう - MYCOMジャーナル   では、これを使って更新してみる。まずはコマンドプロンプトを起動。  C:/documents and settings/admin> // 私が今いる場所。  C:/documents and settings/admin>git // git と入力。すると、ズラーっとなんか出てくる。  C:/documents and settings/admin>cd hogehoge（フォルダ名） // hogehoge に場所を移動。cd は change disc の略。　追記：change directoryでした！申し訳ない＞＜　  C:/documents and settings/admin/hogehoge>git status // 変更したファイルを確認。    // windowsでは (END) が出るので、キーボードの Q でエスケープ。  C:/documents and settings/admin/hogehoge>git commit -a -m lovecall（適当な名前） // ローカルでコミットする。なんたらかんたら 1 files changed, て言われる。 -m lovecall（適当な名前）ナシで Enter 押したら、「名前をつけろ！」とか怒られた(´･ω･`)  C:/documents and settings/admin/hogehoge>git push // サーバーと通信 　↓ password:　// パスワード要求されるので入力。  その後サーバーに反映されるはずなんだけど、たいていここでしくじる。 git push がどうしても成功しない場合は、サーバーのソースが更新されている可能性がある。 そんなときは git pull。これはサーバーの更新をローカルに引っ張ってくるコマンドっぽい。 ってことは、「えっ、じゃあ私が変更した箇所が上書きされるわけ！？」って思うけど、 どうやらそうではないらしい。謎。 とにかく、pull してローカルのファイルを更新してから再び push 。 押してもダメなら引いてみろ！ですね、わかります(・∀・)  強制的に git-push を実行する方法もあるみたいだけど、これは試してない。 push に失敗した場合の対処 - Git ユーザマニュアル   んで、さらにもう一段階。 ssh でログインして、サーバーの変更をサイトに反映させねばならぬのだ。 参考：Secure Shell- Wikipedia 違！：埼玉最終兵器の略。　←わらたｗ    ここから先はエイリアスなどを設定していて話がこんがらがるのでとりあえず書かない＞＜ エイリアスとは 【alias】 - IT用語辞典 e-Words  ちなみに、エイリアスは以下のコマンドで設定できる。 git remote add alias名 長くて打つのが面倒な hoge // 長くて打つのが面倒な hoge を alias名で参照できるように設定  また、長い文字列をコピペしたいときは、ctrl+V が使えないので [右クリック→貼り付け] を使う。    最後に、git 初心者に優しい参考リンクに感謝！ Greenbear Laboratory - gitを使ってみよう git/git覚書 - TOBY SOFT wiki Git/Commands - かWiki Gitの基礎練習 - 思っているよりもずっとずっと人生は短い。 Gitを触ってみるよ その1 - Stellaqua - ＴＯＭの技術日記 バージョン管理をsubversionからgitに移行してみた - kaeruspoon  git じゃないけど参考にしたリンク コマンドプロンプト UNIXコマンド  少し分かってきたらこれも読みたい *[Ruby on Rails]　「Ruby on Rails　アリス」 の検索結果一覧 - ザリガニが見ていた...。  うろちょろしてたらこんなのめっけた！やる夫で学ぶ git！！ hotchpotch's yaruo at master ― GitHub  やる夫がんばるなぁ。ガチャピンを超えるんじゃないだろか。