2008年04月24日09:42
カテゴリ
Zaurus SL-C3200
Linuxの基礎　その３
私がZaurusをいじる為に勉強したLinuxの基礎について、その３ 
でも独学なので間違っているかも。ツッコミカマーン！ 
●文字コード 
文字コードに関してです。 
ちょっと前はLinuxはeucJPで、WindowsはShift-JISとそれだけだった 
のですが、最近のLinuxは軒並みUTF-8というユニコードに移行しよう 
としてやがります。 
Linux上でeucJPとUTF-8の戦いが勃発するのは非常にめんどくさい。 
また、文字化けというのはどこが原因で起こったのかを特定するのが 
ものすごく困難だと個人的に思うのです。　なので解説を。 
１．システムの文字コード 
いわゆる環境変数ってやつで指定する文字コード。 
ターミナルで 
env 
と打つと見れる環境変数の内、LANGというものです。 
標準のZaurusでは、ja_JP.eucJP となっていると思います（うろ覚え） 
つまり文字コードはeucJPってことになります。 
しかし、環境変数ってのは文字通りただの変数です。これ、どうやって 
使われるんでしょう。 
実は各種アプリケーションが起動する時などに参照するのです。 
日本語を表示できるアプリなんかは、起動する時に「このシステムで 
共通的に使われている文字コードってなんだろう」と考えて環境変数 
LANGを見るのです。 
するとeucJPと書かれている。　じゃあオレっちも、自分が出力する 
漢字はeucJPにして出力しようかな〜ってな感じなのです。 
もっとも、各種アプリケーションが起動時にどう考えるかはアプリ次第。 
中にはLANGなんかハナから無視で「自分はeucJPしか出力しません！」 
ってやつもいます。 
そして、ここがポイントなのですが、環境変数LANGを参照するアプリの 
一つとして非常に重要なのが、シェルです。 
ターミナルを立ち上げると真っ黒な画面の中にコマンドプロンプトを 
出してユーザの入力を受け付けるアイツです。 
標準状態のZaurusではbashと呼ばれる種類のシェルが動いてますし、 
Zaurus界で人気のあるzshなんかもシェルです。 
このシェルのコマンドプロンプトに、例えばabcdeと入力すると、 
「abcdeなんていうコマンドはありません」みたいなエラーメッセージ 
が表示されると思います。 
このシェルが出すエラーメッセージも、環境変数LANGの文字コードで 
出力されます。 
つまり、ユーザの設定ファイル「.profile」や「.zshrc」などでLANG 
にUTF-8を設定しといて、ターミナルを立ち上げると、ターミナルの中 
で自動的に立ち上がったシェルは、このシステムで共通で使われている 
文字コードはUTF-8だな、と考える訳です。 
そこでabcdeと打つと、先ほどのエラーメッセージをUTF-8で出力しよう 
とするのです。 
しかし、Zaurusのターミナルはデフォルト状態ではeucです。 
eucの文字列しか表示できません。 
つまり、、、UTF-8のエラーメッセージは文字化けします。 
「abcde????????????????」みたいな感じになると思います。 
注）SL-C3200でUTF-8を使おうとすると、Localeが不完全なのでzshが 
立ち上がらなくなりますので要注意。 
UTF-8を使おうとするなら、事前にこちらのLocaleを組み込む 
必要がありました。 
http://ezaurus.com/bzsolution/download/Locale/Locale.html 
※全く保証外ですので自己責任でお願いします。 
また、上記ロケールはそのままではインストールできません。 
事前に /usr/lib/locale/ja_JP.utf8 があるなら退避しておか 
なければなりません。 
２．ターミナルの文字コード 
ターミナルは普通、環境変数LANGを見て立ち上がってくる訳ではあり 
ません。 
ターミナルは自分の中で独自に文字コードを持っています。 
ZaurusのCD-ROMに入ってくるターミナルは、eucJPしか解釈しません。 
UTF-8に切り替えることはできないのです。 
しかしZaurus界で有名な、タコのアイコンのembeddedkonsole-jpなど 
では、立ち上げてFn+Qを押すとメニューが開き、その中で文字コード 
を選択できるのです。 
ここで、文字コードをUTF-8に変更すると、先ほどの???????といった 
エラーメッセージが正しく表示されるようになったでしょう。 
シェルがUTF-8で吐いたメッセージは、UTF-8が表示できるターミナルで 
読まないとだめなのです。 
その他にも、Windows界でポピュラーなTeraTermProなどもメニューで 
文字コードを指定しないといけません。 
３．ファイル名の文字コード 
これです。これが曲者なのです。 
Zaurus標準のターミナルなどはeucJPしか表示できませんし、環境変数 
LANGもデフォルトはeucJPになっています。 
そしたらなぜわざわざUTF-8に変更する必要があるのでしょう。 
答えはファイル名の文字コードがUTF-8だから、なのです。 
Zaurusに格納される日本語ファイル名は、全てUTF-8なのです。 
そうじゃないとQTアプリなどで表示される日本語が文字化けしてしまう 
からです。 
つまりZaurusのGUI環境はUTF-8の日本語ファイル名しか解釈できないと 
いうことです。 
ターミナルでこれを　lsコマンドで表示した場合、lsコマンドは日本語 
ファイル名の変換をしてくれませんので、UTF-8のファイル名はUTF-8で 
表示されるのです。 
それをターミナルに表示するには、UTF-8を表示できるターミナルが 
必要なのです。 
eucのターミナルで表示させようと思った場合、ls | nkf -e などとして 
出力をeucJPに変換すれば表示できます。 
この、ファイル名の文字コード＝UTF-8というのは変更できません。 
変更するとQtのGUI上で表示できなくなるからです。 
なので周りの環境をこれに合わせて調整していかなければなりません。 
重要なのは、このファイル名の文字コードは、システムの文字コード 
とは無関係である、という点です。 
システムの文字コードとは無関係に、samba mountでコピーしてきた 
ファイルはsamba mountの設定によりますし、Windows上で圧縮した 
ファイルを展開すると、Shift-JISのファイル名がそのまま出てきます。 
４．FD Cloneの文字コード 
FD Clone（ファイラ）の設定項目で、文字コードに関するものは次の 
ものがあります。（全て.fd2rcというファイルに書きます） 
LANGUAGE 表示する漢字コード 
DEFKCODE システム標準の漢字コード 
INPUTKCODE キーボード入力の漢字コード 
FNAMEKCODE ファイル名の漢字コード 
ファイル名はUTF-8で変更できないので、FNAMEKCODEはUTF-8で決定。 
そして、表示する漢字コードLANGUAGEをeucJPにしたら、FD Cloneが 
内部で変換して、UTF-8のファイル名をeucJPに変換して表示してくれ 
ます。なのでeucJPのターミナルで見れる、ということになります。 
DEFKCODEというのは、FD Cloneが外部コマンドを呼び出す時に渡す 
文字コードです。 
INPUTKCODEはキーボードから日本語を入力した時に、それがどんな 
コードで送られてくるか、です。 
ターミナルに合わせないといけません。ですので、eucJPにする、と。 
５．vi（vim）の文字コード 
vim（テキストエディタ）の文字コード設定項目は次の通り。 
（全て.vimrcというファイルに書きます） 
fileencodings 前から順番に試していきマッチしたらそこで終了 
encoding 全てマッチしなかった際のデフォルト 
termencoding ターミナルの文字コード（キー入力、モニタ出力） 
fileencodingsには扱う文字コードを羅列します。 
ファイルを開くと、その文字コードを頭から順番に試していき、マッチ 
したらそのコードを採用します。 
その際、採用された文字コードを　fileencoding（sがない）という 
変数に格納します。 
fileencoding（sなし）は自分で設定するものではありません。 
encodingは全てマッチしなかった際のデフォルトです。 
なので、fileencodingsの中にencodingの値と同じものがあると無駄です。 
そしてtermencodingは、開いた文字コードをどう表示させるかで、 
ターミナルに合わせないといけません。 
ファイルの中身がどんな文字コードで書かれているかは、ファイル名の 
文字コードとは全く無関係です。 
メモ帳などWindowsで作成したファイルは、デフォルトShift-JISです。 
ですので、fileencodingsにShift-JISを入れておいて、termencodingは 
eucJPにする、というのが一般的でしょう。 
以上のように、文字コードを表示上eucJPに変換して使うようにすれば、 
とりあえず利用に差し障りはありません。 
ls コマンドも、ls | nkf -e のエイリアスにすれば問題ないでしょう。 
しかしなーんか気持ち悪いのも事実。 
ファイル名がUTF-8なのは絶対変更できない。ならば今回は、完全UTF-8化 
を目指しましょう。 
まず、環境変数LANGをUTF-8にしましょう。 
zshを使っているなら.zshenvや.zshrcなどでexport LANG=UTF-8などと 
やる。 
そしてターミナルを開きなおし、abcdeとか打つとエラーメッセージが 
文字化けするでしょう。 
embeddedkonsole-jaでFn-Qを押し、メニューで文字コードをUTF-8にすると 
文字化けしなくなります。 
そのままfdを開きます。 
日本語メッセージや日本語ファイル名が文字化けしてるでしょう。 
.fd2rcをエディタで開き、 
LANGUAGE=UTF-8 
DEFKCODE=UTF-8 
INPUTKCODE=UTF-8 
FNAMEKCODE=UTF-8 
と全てUTF-8に変更してfdを開きなおします。 
すばらしい。日本語が全て表示できているでしょう。 
次に、vimで何か日本語が書かれているファイルを開きます。 
Shift-JISで書かれたファイルもeucJPに変換して表示しようとするので 
文字化けするでしょう。 
.vimrcを開き、 
encoding=UTF-8 
termencoding=UTF-8 
にしてvimを開きなおします。 
すばらしい。完璧です。 
これで完全UTF-8化です（多分） 
最後に、Windows上で圧縮したファイルをZaurusで展開すると出てくる 
Shift-JISの日本語ファイル名。 
これだけはどうしようもないので、convmvというツールを使ってその都度 
ファイル名変換するようにしましょう。 
http://www.j3e.de/linux/convmv/man/ 
注）上記のように完全UTF-8化して運用していると気づきますが、日本語 
名のフォルダやファイルに関する操作が異常に遅くなります。 
例）日本語名フォルダを削除する　等 
人によっては致命的ですので、UTF-8化しようとする人は良く考えて 
から行ってください。 
以上です。 
あるコンソールアプリで文字化けが起こった時、上記の文字コード達が 
どういう状態になっているのかを正しく把握しないと、何が原因なのか 
分からずカーネルパニック（俺が）になります。 
自分のシステムの文字コードがどうなっているかは把握しておくように 
しましょう。 
「Zaurus SL-C3200」カテゴリの最新記事
Linuxの基礎　その３
Linuxの基礎　その２
Linuxの基礎　その１
Zaurusでエミュ 要注意２
Zaurusでエミュ、要注意！